version: "3.9"
services:
  db:
    container_name: "db"
    image: mysql

    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test

    ports:
      - "3306:3306"


    healthcheck:
      test: [ "CMD-SHELL", "mysql -u root -pexample" ]
      interval: 10s
      timeout: 5s
      retries: 5

    volumes:
      - ./data:/var/lib/mysql


    networks:
      - shared

  redis:
    container_name: "redis"
    image: "redis:alpine"
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - shared

  app:
    container_name: app
    build:
      context: ./
      dockerfile: ./Dockerfile

    ports:
      - "8000:8000"

    working_dir: /opt/A

    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/opt/A
    depends_on:
      - db
    networks:
      - shared

    restart: always

  celery-worker:
    container_name: celery-worker
    build:
      context: ./
    working_dir: /opt/A
    networks:
      - shared
    command: celery -A A worker -l info -P solo -E


networks:
  shared:
